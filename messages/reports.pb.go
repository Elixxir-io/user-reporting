////////////////////////////////////////////////////////////////////////////////
// Copyright Â© 2022 xx foundation                                             //
//                                                                            //
// Use of this source code is governed by a license that can be found in the  //
// LICENSE file.                                                              //
////////////////////////////////////////////////////////////////////////////////

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: reports.proto

package messages

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CMIXText struct {
	Text                 string              `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Reply                *TextReply          `protobuf:"bytes,2,opt,name=reply,proto3" json:"reply,omitempty"`
	Preview              *TextNetworkPreview `protobuf:"bytes,3,opt,name=preview,proto3" json:"preview,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CMIXText) Reset()         { *m = CMIXText{} }
func (m *CMIXText) String() string { return proto.CompactTextString(m) }
func (*CMIXText) ProtoMessage()    {}
func (*CMIXText) Descriptor() ([]byte, []int) {
	return fileDescriptor_66b94ab03de429a8, []int{0}
}

func (m *CMIXText) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMIXText.Unmarshal(m, b)
}
func (m *CMIXText) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMIXText.Marshal(b, m, deterministic)
}
func (m *CMIXText) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMIXText.Merge(m, src)
}
func (m *CMIXText) XXX_Size() int {
	return xxx_messageInfo_CMIXText.Size(m)
}
func (m *CMIXText) XXX_DiscardUnknown() {
	xxx_messageInfo_CMIXText.DiscardUnknown(m)
}

var xxx_messageInfo_CMIXText proto.InternalMessageInfo

func (m *CMIXText) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *CMIXText) GetReply() *TextReply {
	if m != nil {
		return m.Reply
	}
	return nil
}

func (m *CMIXText) GetPreview() *TextNetworkPreview {
	if m != nil {
		return m.Preview
	}
	return nil
}

type TextNetworkPreview struct {
	Url                  string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Image                []byte   `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TextNetworkPreview) Reset()         { *m = TextNetworkPreview{} }
func (m *TextNetworkPreview) String() string { return proto.CompactTextString(m) }
func (*TextNetworkPreview) ProtoMessage()    {}
func (*TextNetworkPreview) Descriptor() ([]byte, []int) {
	return fileDescriptor_66b94ab03de429a8, []int{1}
}

func (m *TextNetworkPreview) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TextNetworkPreview.Unmarshal(m, b)
}
func (m *TextNetworkPreview) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TextNetworkPreview.Marshal(b, m, deterministic)
}
func (m *TextNetworkPreview) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TextNetworkPreview.Merge(m, src)
}
func (m *TextNetworkPreview) XXX_Size() int {
	return xxx_messageInfo_TextNetworkPreview.Size(m)
}
func (m *TextNetworkPreview) XXX_DiscardUnknown() {
	xxx_messageInfo_TextNetworkPreview.DiscardUnknown(m)
}

var xxx_messageInfo_TextNetworkPreview proto.InternalMessageInfo

func (m *TextNetworkPreview) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *TextNetworkPreview) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *TextNetworkPreview) GetImage() []byte {
	if m != nil {
		return m.Image
	}
	return nil
}

type TextReply struct {
	Message              string              `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	SenderId             []byte              `protobuf:"bytes,2,opt,name=senderId,proto3" json:"senderId,omitempty"`
	UniqueId             []byte              `protobuf:"bytes,3,opt,name=uniqueId,proto3" json:"uniqueId,omitempty"`
	Preview              *TextNetworkPreview `protobuf:"bytes,4,opt,name=preview,proto3" json:"preview,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TextReply) Reset()         { *m = TextReply{} }
func (m *TextReply) String() string { return proto.CompactTextString(m) }
func (*TextReply) ProtoMessage()    {}
func (*TextReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_66b94ab03de429a8, []int{2}
}

func (m *TextReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TextReply.Unmarshal(m, b)
}
func (m *TextReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TextReply.Marshal(b, m, deterministic)
}
func (m *TextReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TextReply.Merge(m, src)
}
func (m *TextReply) XXX_Size() int {
	return xxx_messageInfo_TextReply.Size(m)
}
func (m *TextReply) XXX_DiscardUnknown() {
	xxx_messageInfo_TextReply.DiscardUnknown(m)
}

var xxx_messageInfo_TextReply proto.InternalMessageInfo

func (m *TextReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *TextReply) GetSenderId() []byte {
	if m != nil {
		return m.SenderId
	}
	return nil
}

func (m *TextReply) GetUniqueId() []byte {
	if m != nil {
		return m.UniqueId
	}
	return nil
}

func (m *TextReply) GetPreview() *TextNetworkPreview {
	if m != nil {
		return m.Preview
	}
	return nil
}

type Report struct {
	ReporterId           []byte   `protobuf:"bytes,1,opt,name=reporterId,proto3" json:"reporterId,omitempty"`
	ReportedId           []byte   `protobuf:"bytes,2,opt,name=reportedId,proto3" json:"reportedId,omitempty"`
	Messages             []string `protobuf:"bytes,3,rep,name=messages,proto3" json:"messages,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Report) Reset()         { *m = Report{} }
func (m *Report) String() string { return proto.CompactTextString(m) }
func (*Report) ProtoMessage()    {}
func (*Report) Descriptor() ([]byte, []int) {
	return fileDescriptor_66b94ab03de429a8, []int{3}
}

func (m *Report) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Report.Unmarshal(m, b)
}
func (m *Report) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Report.Marshal(b, m, deterministic)
}
func (m *Report) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Report.Merge(m, src)
}
func (m *Report) XXX_Size() int {
	return xxx_messageInfo_Report.Size(m)
}
func (m *Report) XXX_DiscardUnknown() {
	xxx_messageInfo_Report.DiscardUnknown(m)
}

var xxx_messageInfo_Report proto.InternalMessageInfo

func (m *Report) GetReporterId() []byte {
	if m != nil {
		return m.ReporterId
	}
	return nil
}

func (m *Report) GetReportedId() []byte {
	if m != nil {
		return m.ReportedId
	}
	return nil
}

func (m *Report) GetMessages() []string {
	if m != nil {
		return m.Messages
	}
	return nil
}

func init() {
	proto.RegisterType((*CMIXText)(nil), "messages.CMIXText")
	proto.RegisterType((*TextNetworkPreview)(nil), "messages.TextNetworkPreview")
	proto.RegisterType((*TextReply)(nil), "messages.TextReply")
	proto.RegisterType((*Report)(nil), "messages.Report")
}

func init() {
	proto.RegisterFile("reports.proto", fileDescriptor_66b94ab03de429a8)
}

var fileDescriptor_66b94ab03de429a8 = []byte{
	// 279 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x51, 0x3d, 0x4b, 0xc4, 0x40,
	0x10, 0x65, 0x2f, 0xf7, 0x91, 0x8c, 0x27, 0xc8, 0x68, 0x11, 0x44, 0x24, 0xa4, 0x8a, 0x4d, 0x0a,
	0x05, 0x7f, 0x80, 0x56, 0x29, 0x94, 0x63, 0xb0, 0xb0, 0x3d, 0xc9, 0x70, 0x04, 0x73, 0x97, 0xb8,
	0xbb, 0xf1, 0xce, 0xd2, 0x1f, 0xe1, 0xff, 0x95, 0xdd, 0x4d, 0x96, 0x88, 0xd5, 0x75, 0xf3, 0xe6,
	0xbd, 0x79, 0xf3, 0x86, 0x81, 0x53, 0xc9, 0x6d, 0x23, 0xb5, 0xca, 0x5b, 0xd9, 0xe8, 0x06, 0xc3,
	0x2d, 0x2b, 0xb5, 0xde, 0xb0, 0x4a, 0xbf, 0x05, 0x84, 0x8f, 0x4f, 0xc5, 0xeb, 0x0b, 0x1f, 0x34,
	0x22, 0x4c, 0x35, 0x1f, 0x74, 0x2c, 0x12, 0x91, 0x45, 0x64, 0x6b, 0xbc, 0x81, 0x99, 0xe4, 0xb6,
	0xfe, 0x8a, 0x27, 0x89, 0xc8, 0x4e, 0x6e, 0xcf, 0xf3, 0x61, 0x34, 0x37, 0x23, 0x64, 0x28, 0x72,
	0x0a, 0xbc, 0x87, 0x45, 0x2b, 0xf9, 0xb3, 0xe2, 0x7d, 0x1c, 0x58, 0xf1, 0xd5, 0x5f, 0xf1, 0x33,
	0xeb, 0x7d, 0x23, 0xdf, 0x57, 0x4e, 0x43, 0x83, 0x38, 0x25, 0xc0, 0xff, 0x34, 0x9e, 0x41, 0xd0,
	0xc9, 0xba, 0xcf, 0x62, 0x4a, 0xbc, 0x80, 0x99, 0xae, 0x74, 0xcd, 0x36, 0x4a, 0x44, 0x0e, 0x98,
	0x6e, 0xb5, 0x5d, 0x6f, 0xd8, 0xee, 0x5c, 0x92, 0x03, 0xe9, 0x8f, 0x80, 0xc8, 0x07, 0xc4, 0x18,
	0x16, 0x7d, 0x92, 0xde, 0x6f, 0x80, 0x78, 0x09, 0xa1, 0xe2, 0x5d, 0xc9, 0xb2, 0x28, 0xad, 0xed,
	0x92, 0x3c, 0x36, 0x5c, 0xb7, 0xab, 0x3e, 0x3a, 0x2e, 0xca, 0xde, 0xdc, 0xe3, 0xf1, 0xad, 0xd3,
	0x63, 0x6e, 0x2d, 0x61, 0x4e, 0xf6, 0x15, 0x78, 0x0d, 0xe0, 0x9e, 0x62, 0x77, 0x0b, 0xeb, 0x3f,
	0xea, 0x8c, 0xf8, 0xd2, 0x67, 0x1b, 0x75, 0x4c, 0xba, 0x61, 0x63, 0x1c, 0x24, 0x41, 0x16, 0x91,
	0xc7, 0x0f, 0x93, 0x95, 0x78, 0x9b, 0xdb, 0x57, 0xdf, 0xfd, 0x06, 0x00, 0x00, 0xff, 0xff, 0x64,
	0xc7, 0x6e, 0xdd, 0xfb, 0x01, 0x00, 0x00,
}
